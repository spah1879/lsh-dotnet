using System.Text;
using Kr.Re.Nsr.Crypto;

class HMACLSH512VS
{
  private static readonly byte[][] key = {
    Encoding.ASCII.GetBytes("key"),
    new byte[2048]
  };

  private static readonly byte[] data = Encoding.ASCII.GetBytes("A quick brown fox jumps over the lazy dog");

  private static readonly byte[][] result = {
    new byte[] {0x46, 0xff, 0x30, 0x2b, 0x45, 0xa4, 0xa7, 0xa4, 0x46, 0xa6, 0x5d, 0xe3, 0x4f, 0xb7, 0x7f, 0x41, 0x4c, 0xcb, 0x17, 0xdc, 0x3b, 0x6d, 0x86, 0xf6, 0x6a, 0x4e, 0xd0, 0xe2, 0xf6, 0x2a, 0xda, 0x4b, 0xb6, 0x17, 0x7f, 0xd7, 0xf7, 0x62, 0x4a, 0xeb, 0x2e, 0x38, 0x0d, 0x88, 0xf5, 0x82, 0x35, 0x5e, 0x56, 0x04, 0x94, 0x96, 0x60, 0x88, 0x23, 0x62, 0xd9, 0x59, 0x88, 0xeb, 0xc4, 0x48, 0xfe, 0x7f},
    new byte[] {0x2f, 0x6e, 0xa1, 0x08, 0xae, 0x2b, 0xc9, 0xc2, 0x73, 0xc8, 0xe3, 0xc2, 0x6c, 0x55, 0x67, 0x37, 0x2c, 0xd3, 0xbd, 0x79, 0xb7, 0x32, 0x2a, 0x54, 0x1c, 0x36, 0x60, 0x77, 0xed, 0x91, 0xf3, 0xc7, 0xc7, 0x40, 0xdc, 0xb3, 0x91, 0x62, 0xcb, 0x44, 0xbf, 0xae, 0x03, 0xd6, 0x32, 0x09, 0xda, 0x48, 0x6a, 0x6e, 0xef, 0x11, 0x1c, 0x3d, 0x03, 0x74, 0x96, 0xc3, 0xbc, 0x43, 0xbc, 0xb5, 0x13, 0xdd}
  };

  public static void Test()
  {
    Console.WriteLine("----- HMAC LSH512 Test -----");
    for (int i = 0; i < key.Length; ++i)
    {
      Test(key[i], data, result[i]);
    }
    Console.WriteLine();
  }

  static void Test(byte[] key, byte[] msg, byte[] reference)
  {
    Mac mac = Mac.GetInstance(Hash.Algorithm.LSH512_512);
    mac.Init(key);
    byte[] hmac = mac.DoFinal(msg);

    Console.WriteLine($"HMAC-LSH512-TEST : {Enumerable.SequenceEqual(hmac, reference)}");
  }

}